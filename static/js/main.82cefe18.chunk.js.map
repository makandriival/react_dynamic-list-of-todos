{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","openModal","selectedTodo","className","map","todo","id","title","completed","userId","cn","type","onClick","TodoFilter","handleSelectChange","handleInputChange","useState","selectInput","setInputValue","onChange","event","target","value","placeholder","style","pointerEvents","Loader","React","memo","TodoModal","closeModal","user","href","email","name","getAll","a","App","setTodos","isLoad","setIsLoad","isModalOpen","setModalOpen","selectedUser","setSelectedUser","setSelectedTodo","selectValue","setSelectValue","inputValue","visibleTodos","filter","toLowerCase","includes","useEffect","data","useCallback","getUser","select","input","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82cefe18.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  openModal: (userId: number, todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  openModal,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n          userId,\n        } = todo;\n\n        return (\n          <tr key={id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{id}</td>\n            {\n              !completed\n                ? <td className=\"is-vcentered\" />\n                : (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n            }\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  openModal(userId, todo);\n                }}\n              >\n                <span className=\"icon\">\n                  {/* 'fa-eye-slash' */}\n                  {/* <i className=\"far fa-eye\" /> */}\n                  <i className={cn('far', {\n                    'fa-eye-slash': selectedTodo?.id === id,\n                    'fa-eye': selectedTodo?.id !== id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { useState } from 'react';\n\ninterface Props {\n  handleSelectChange: (select: string) => void;\n  handleInputChange: (input: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleSelectChange,\n  handleInputChange,\n}) => {\n  const [selectInput, setInputValue] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              handleSelectChange(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={selectInput}\n          onChange={(event) => {\n            setInputValue(event.target.value);\n            handleInputChange(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {selectInput && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setInputValue('');\n                handleInputChange('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  closeModal: () => void;\n  user: User | null;\n  todo: Todo | null;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  closeModal,\n  user,\n  todo,\n}) => (\n  <div className=\"modal is-active\" data-cy=\"modal\">\n    <div className=\"modal-background\" />\n\n    {!user || !todo ? (\n      <Loader />\n    ) : (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${todo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={closeModal}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {todo.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {todo.completed\n              ? <strong className=\"has-text-success\">Done</strong>\n              : <strong className=\"has-text-danger\">Planned</strong>}\n\n            {' by '}\n\n            <a href={`mailto:${user.email}`}>\n              {user.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    )}\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst getAll = async (): Promise<Todo[]> => {\n  return getTodos();\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoad, setIsLoad] = useState(true);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectValue, setSelectValue] = useState<string>('all');\n  const [inputValue, setInputValue] = useState<string>('');\n  let visibleTodos = todos;\n\n  if (selectValue === 'completed') {\n    visibleTodos = visibleTodos.filter(todo => todo.completed);\n  }\n\n  if (selectValue === 'active') {\n    visibleTodos = visibleTodos.filter(todo => !todo.completed);\n  }\n\n  if (inputValue) {\n    visibleTodos = visibleTodos.filter(todo => todo.title.toLowerCase().includes(inputValue));\n  }\n\n  useEffect(() => {\n    getAll().then((data) => {\n      setIsLoad(false);\n      setTodos(data);\n    });\n  }, []);\n\n  const openModal = useCallback((userId: number, todo: Todo) => {\n    setModalOpen(true);\n    getUser(userId).then(user => setSelectedUser(user));\n    setSelectedTodo(todo);\n  }, []);\n\n  const closeModal = useCallback(() => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n    setModalOpen(false);\n  }, []);\n\n  const handleSelectChange = useCallback((select: string) => {\n    setSelectValue(select);\n  }, []);\n\n  const handleInputChange = useCallback((input: string) => {\n    setInputValue(input.toLowerCase());\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleSelectChange={handleSelectChange}\n                handleInputChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoad\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={visibleTodos}\n                      openModal={openModal}\n                      selectedTodo={selectedTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen\n      && (\n        <TodoModal\n          closeModal={closeModal}\n          user={selectedUser}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}