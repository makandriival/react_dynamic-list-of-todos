{"version":3,"sources":["api.ts","types/FilterOptions.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterOptions","TodoItem","todo","onOpen","selectedTodo","id","completed","title","userId","className","cn","type","onClick","TodoList","todos","map","TodoFilter","handleSelectChange","handleInputChange","selectInput","inputValue","onChange","event","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","React","memo","TodoModal","handleClose","user","href","email","name","getAll","a","App","useState","setTodos","isLoading","setIsLoading","isModalOpen","setModalOpen","selectedUser","setSelectedUser","setSelectedTodo","selectValue","setSelectValue","setInputValue","visibleTodos","useMemo","filteredTodos","filter","toLowerCase","includes","handleOpen","useCallback","getUser","select","input","useEffect","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e07d4d00.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterOptions {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  onOpen: (userId: number, todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onOpen,\n  selectedTodo,\n}) => {\n  const {\n    id,\n    completed,\n    title,\n    userId,\n  } = todo;\n\n  return (\n    <tr key={id} data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      {\n        !completed\n          ? <td className=\"is-vcentered\" />\n          : (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          )\n      }\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            onOpen(userId, todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye-slash': selectedTodo?.id === id,\n              'fa-eye': selectedTodo?.id !== id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  onOpen: (userId: number, todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onOpen,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onOpen={onOpen}\n          selectedTodo={selectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { FilterOptions } from '../../types/FilterOptions';\n\ninterface Props {\n  handleSelectChange: (select: FilterOptions) => void;\n  handleInputChange: (input: string) => void;\n  selectInput: string;\n  inputValue: string;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleSelectChange,\n  handleInputChange,\n  selectInput,\n  inputValue,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            handleSelectChange(event.target.value as FilterOptions);\n          }}\n        >\n          <option value={FilterOptions.All}>All</option>\n          <option value={FilterOptions.Active}>Active</option>\n          <option value={FilterOptions.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={(event) => {\n          handleInputChange(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {selectInput && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              handleInputChange('');\n            }}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  handleClose: () => void;\n  user: User | null;\n  todo: Todo | null;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  handleClose,\n  user,\n  todo,\n}) => (\n  <div className=\"modal is-active\" data-cy=\"modal\">\n    <div className=\"modal-background\" />\n\n    {!user || !todo ? (\n      <Loader />\n    ) : (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${todo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={handleClose}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {todo.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {todo.completed\n              ? <strong className=\"has-text-success\">Done</strong>\n              : <strong className=\"has-text-danger\">Planned</strong>}\n\n            {' by '}\n\n            <a href={`mailto:${user.email}`}>\n              {user.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    )}\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { FilterOptions } from './types/FilterOptions';\n\nconst getAll = async (): Promise<Todo[]> => {\n  return getTodos();\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectValue, setSelectValue] = useState(FilterOptions.All);\n  const [inputValue, setInputValue] = useState('');\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    if (selectValue === FilterOptions.Completed) {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    if (selectValue === FilterOptions.Active) {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    }\n\n    if (inputValue) {\n      filteredTodos = filteredTodos\n        .filter(todo => todo.title\n          .toLowerCase()\n          .includes(inputValue));\n    }\n\n    return filteredTodos;\n  }, [todos, selectValue, inputValue]);\n\n  const handleOpen = useCallback((userId: number, todo: Todo) => {\n    setModalOpen(true);\n    getUser(userId).then(user => setSelectedUser(user));\n    setSelectedTodo(todo);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n    setModalOpen(false);\n  }, []);\n\n  const handleSelectChange = useCallback((select: FilterOptions) => {\n    setSelectValue(select);\n  }, []);\n\n  const handleInputChange = useCallback((input: string) => {\n    setInputValue(input.toLowerCase());\n  }, []);\n\n  useEffect(() => {\n    getAll().then((data) => {\n      setIsLoading(false);\n      setTodos(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <h1 className=\"title\">Todos:</h1>\n\n          <div className=\"block\">\n            <TodoFilter\n              handleSelectChange={handleSelectChange}\n              handleInputChange={handleInputChange}\n              selectInput={selectValue}\n              inputValue={inputValue}\n            />\n          </div>\n\n          <div className=\"block\">\n            {\n              isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onOpen={handleOpen}\n                    selectedTodo={selectedTodo}\n                  />\n                )\n            }\n          </div>\n        </div>\n      </div>\n      {isModalOpen && (\n        <TodoModal\n          handleClose={handleClose}\n          user={selectedUser}\n          todo={selectedTodo}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}